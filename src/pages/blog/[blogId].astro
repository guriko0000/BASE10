---
import Layout from "../../layouts/Layout.astro";
import { getCategories, getBlogDetail, getBlogs } from "../../library/microcms";

export async function getStaticPaths() {
  const limit = 100;
  let offset = 0;
  let allContents: { id: string }[] = [];
  let hasMore = true;

  while (hasMore) {
    const res = await getBlogs({ limit, offset, fields: ["id"] });
    allContents = allContents.concat(res.contents);
    offset += limit;
    hasMore = res.contents.length === limit;
  }

  return allContents.map((content) => ({
    params: { blogId: content.id },
  }));
}
const { blogId } = Astro.params;
const blog = await getBlogDetail(blogId);
const categoryList = await getCategories();

let allBlogs: { id: string; title: string; publishedAt: string }[] = [];
let offset = 0;
const limit = 100;
let hasMore = true;

while (hasMore) {
  const res = await getBlogs({
    offset,
    limit,
    fields: ["id", "title", "publishedAt"],
    orders: "-publishedAt",
  });
  allBlogs = allBlogs.concat(res.contents);
  offset += limit;
  hasMore = res.contents.length === limit;
}

const currentIndex = allBlogs.findIndex((item) => item.id === blogId);
const nextBlog = allBlogs[currentIndex + 1];
const prevBlog = allBlogs[currentIndex - 1];
---

<Layout title={blog.title}>
  <section class="p-under-mv">
    <div class="l-inner">
      <p class="p-under-mv__title">
        <span class="en">Blog</span>
        <span class="ja">ブログ</span>
      </p>
    </div>
  </section>

  <section class="p-post l-section l-section--first l-section--last">
    <div class="l-inner">
      <article class="l-section__main">
        <div class="p-post__head">
          <h1 class="p-post__title">{blog.title}</h1>
          <div class="p-post__meta">
            <p class="p-post__date">{blog.publishedAt.substring(0, 10)}</p>
            {
              blog.category && blog.category.length > 0 && (
                <div class="p-post__cate-wrap">
                  {blog.category.map((cat) => (
                    <span class="p-post__cate">{cat["cate-name"]}</span>
                  ))}
                </div>
              )
            }
          </div>
        </div>

        <div class="p-post__main-img">
          {
            blog.thumbnail?.url && (
              <img src={blog.thumbnail.url} alt="{blog.title}" />
            )
          }
        </div>
        <div class="p-post__content" set:html={blog.content} />

        <div class="p-post__pager c-pager">
          {
            prevBlog && (
              <div class="c-pager__next">
                <a href={`/blog/${prevBlog.id}`}>
                  <img
                    src="/base10/assets/img/icon/icon_arrow-left-gray.svg"
                    alt="次の記事へ"
                    width="12"
                    height="13"
                  />
                  次の記事へ
                </a>
              </div>
            )
          }
          {
            nextBlog && (
              <div class="c-pager__prev">
                <a href={`/blog/${nextBlog.id}`}>
                  前の記事へ
                  <img
                    src="/base10/assets/img/icon/icon_arrow-right-gray.svg"
                    alt="前の記事へ"
                    width="12"
                    height="13"
                  />
                </a>
              </div>
            )
          }
        </div>
      </article>

      <aside class="l-section__sub p-sidebar">
        <div class="p-sidebar__container">
          <h2 class="p-sidebar__title">カテゴリ一覧</h2>
          <ul class="p-sidebar__list">
            {
              categoryList.contents.map((cat) => (
                <li>
                  <a href={`/blog/category/${cat.id}`}>{cat["cate-name"]}</a>
                </li>
              ))
            }
          </ul>
        </div>
      </aside>
    </div>
  </section>
</Layout>
